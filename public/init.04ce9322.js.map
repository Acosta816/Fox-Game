{"version":3,"sources":["constants.js","ui.js","gameState.js","buttons.js","init.js"],"names":["TICK_RATE","ICONS","RAIN_CHANCE","SCENES","DAY_LENGTH","NIGHT_LENGTH","getNextHungerTime","clock","Math","floor","random","getNextDieTime","getNextPoopTime","modFox","state","document","querySelector","className","modScene","togglePoopBag","show","classList","toggle","writeModal","text","innerHTML","gameState","current","wakeTime","sleepTime","hungryTime","dieTime","poopTime","timeToStartCelebrating","timeToEndCelebrating","scene","tick","wake","sleep","getHungry","startCelebrating","endCelebrating","poop","die","startGame","determineFoxState","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","length","clearTimes","bind","toggleHighlighted","initButtons","selectedIcon","addEventListener","buttonClick","target","contains","init","nextTimeToTick","Date","now","requestAnimationFrame","nextAnimationFrame"],"mappings":"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","file":"init.04ce9322.js","sourceRoot":"..\\src","sourcesContent":["export const TICK_RATE = 3000;\r\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\r\nexport const RAIN_CHANCE = 0.2;\r\nexport const SCENES = [\"day\", \"rain\"];\r\nexport const DAY_LENGTH = 60;\r\nexport const NIGHT_LENGTH = 4;\r\n\r\nexport const getNextHungerTime = clock => Math.floor(Math.random() * 3) + 5 + clock;\r\nexport const getNextDieTime = clock => Math.floor(Math.random() * 2) + 3 + clock;\r\nexport const getNextPoopTime = clock => Math.floor(Math.random() * 3) + 4 + clock; \r\n","export const modFox = function modFox(state) {\r\n  document.querySelector('.fox').className = `fox fox-${state}`;\r\n};\r\n\r\nexport const modScene = function modScene(state) {\r\n  document.querySelector('.game').className = `game ${state}`;\r\n};\r\n\r\nexport const togglePoopBag = function togglePoopBag(show) {\r\n  document.querySelector('.poop-bag').classList.toggle(\"hidden\", !show);\r\n};\r\n\r\nexport const writeModal = function writeModal(text = \"\") {\r\n  document.querySelector(\".modal\").innerHTML = `<div class=\"modal-inner\">${text}</div>`;\r\n};\r\n","import {\r\n  SCENES,\r\n  RAIN_CHANCE,\r\n  DAY_LENGTH,\r\n  NIGHT_LENGTH,\r\n  getNextHungerTime,\r\n  getNextDieTime,\r\n  getNextPoopTime,\r\n} from \"./constants\";\r\nimport { modFox, modScene, togglePoopBag, writeModal } from \"./ui\";\r\n\r\nconst gameState = {\r\n  current: \"INIT\",\r\n  clock: 1,\r\n  wakeTime: -1,\r\n  sleepTime: -1,\r\n  hungryTime: -1,\r\n  dieTime: -1,\r\n  poopTime: -1,\r\n  timeToStartCelebrating: -1,\r\n  timeToEndCelebrating: -1,\r\n  scene: 0,\r\n  tick() {\r\n    this.clock++;\r\n    if (this.clock === this.wakeTime) {\r\n      this.wake();\r\n    } else if (this.clock === this.sleepTime) {\r\n      this.sleep();\r\n    } else if (this.clock === this.hungryTime) {\r\n      this.getHungry();\r\n    } else if (this.clock === this.timeToStartCelebrating) {\r\n      this.startCelebrating();\r\n    } else if (this.clock === this.timeToEndCelebrating) {\r\n      this.endCelebrating();\r\n    } else if (this.clock === this.poopTime) {\r\n      this.poop();\r\n    } else if (this.clock === this.dieTime) {\r\n      this.die();\r\n    }\r\n\r\n    return this.clock;\r\n  },\r\n  startGame() {\r\n    this.current = \"HATCHING\";\r\n    this.wakeTime = this.clock + 3;\r\n    modFox(\"egg\");\r\n    modScene(\"day\");\r\n    writeModal();\r\n  },\r\n  wake() {\r\n    this.current = \"IDLING\";\r\n    this.wakeTime = -1;\r\n    modFox(\"idling\");\r\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\r\n    modScene(SCENES[this.scene]);\r\n    this.determineFoxState();\r\n    this.sleepTime = this.clock + DAY_LENGTH;\r\n    this.hungryTime = getNextHungerTime(this.clock);\r\n  },\r\n  handleUserAction(icon) {\r\n    // can't do actions while in these states\r\n    if (\r\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\r\n    ) {\r\n      // do nothing\r\n      return;\r\n    }\r\n\r\n    if (this.current === \"INIT\" || this.current === \"DEAD\") {\r\n      this.startGame();\r\n      return;\r\n    }\r\n\r\n    // execute the currently selected action\r\n    switch (icon) {\r\n      case \"weather\":\r\n        this.changeWeather();\r\n        break;\r\n      case \"poop\":\r\n        this.cleanUpPoop();\r\n        break;\r\n      case \"fish\":\r\n        this.feed();\r\n        break;\r\n    }\r\n  },\r\n  changeWeather() {\r\n    this.scene = (1 + this.scene) % SCENES.length;\r\n    modScene(SCENES[this.scene]);\r\n    this.determineFoxState();\r\n  },\r\n  cleanUpPoop() {\r\n    if (this.current === \"POOPING\") {\r\n      this.dieTime = -1;\r\n      togglePoopBag(true);\r\n      this.startCelebrating();\r\n      this.hungryTime = getNextHungerTime(this.clock);\r\n    }\r\n  },\r\n  poop() {\r\n    this.current = \"POOPING\";\r\n    this.poopTime = -1;\r\n    this.dieTime = getNextDieTime(this.clock);\r\n    modFox(\"pooping\");\r\n  },\r\n  feed() {\r\n    // can only feed when hungry\r\n    if (this.current !== \"HUNGRY\") {\r\n      return;\r\n    }\r\n\r\n    this.current = \"FEEDING\";\r\n    this.dieTime = -1;\r\n    this.poopTime = getNextPoopTime(this.clock);\r\n    modFox(\"eating\");\r\n    this.timeToStartCelebrating = this.clock + 2;\r\n  },\r\n  startCelebrating() {\r\n    this.current = \"CELEBRATING\";\r\n    modFox(\"celebrate\");\r\n    this.timeToStartCelebrating = -1;\r\n    this.timeToEndCelebrating = this.clock + 2;\r\n  },\r\n  endCelebrating() {\r\n    this.timeToEndCelebrating = -1;\r\n    this.current = \"IDLING\";\r\n    this.determineFoxState();\r\n    togglePoopBag(false);\r\n  },\r\n  determineFoxState() {\r\n    if (this.current === \"IDLING\") {\r\n      if (SCENES[this.scene] === \"rain\") {\r\n        modFox(\"rain\");\r\n      } else {\r\n        modFox(\"idling\");\r\n      }\r\n    }\r\n  },\r\n  clearTimes() {\r\n    this.wakeTime = -1;\r\n    this.sleepTime = -1;\r\n    this.hungryTime = -1;\r\n    this.dieTime = -1;\r\n    this.poopTime = -1;\r\n    this.timeToStartCelebrating = -1;\r\n    this.timeToEndCelebrating = -1;\r\n  },\r\n  sleep() {\r\n    this.current = \"SLEEP\";\r\n    modFox(\"sleep\");\r\n    modScene(\"night\");\r\n    this.clearTimes();\r\n    this.wakeTime = this.clock + NIGHT_LENGTH;\r\n  },\r\n  getHungry() {\r\n    this.current = \"HUNGRY\";\r\n    this.dieTime = getNextDieTime(this.clock);\r\n    this.hungryTime = -1;\r\n    modFox(\"hungry\");\r\n  },\r\n  die() {\r\n    this.current = \"DEAD\";\r\n    modScene(\"dead\");\r\n    modFox(\"dead\");\r\n    this.clearTimes();\r\n    writeModal(\"The fox has died :( <br/> Press the middle button to start\");\r\n  },\r\n};\r\n\r\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\r\nexport default gameState;\r\n","import { ICONS } from './constants';\r\n\r\nconst toggleHighlighted = (icon, show) => {\r\n  return document.querySelector(`.${ICONS[icon]}-icon`).classList.toggle(\"highlighted\", show);\r\n};\r\n\r\nexport default function initButtons(handleUserAction) {\r\n  let selectedIcon = 0;\r\n\r\n  function buttonClick({ target }) {\r\n    if (target.classList.contains(\"left-btn\")) {\r\n      toggleHighlighted(selectedIcon, false);\r\n      selectedIcon = (2 + selectedIcon) % ICONS.length;\r\n      toggleHighlighted(selectedIcon, true);\r\n    } else if (target.classList.contains(\"right-btn\")) {\r\n      toggleHighlighted(selectedIcon, false);\r\n      selectedIcon = (1 + selectedIcon) % ICONS.length;\r\n      toggleHighlighted(selectedIcon, true);\r\n    } else {\r\n      handleUserAction(ICONS[selectedIcon]);\r\n    }\r\n  }\r\n\r\n  document.querySelector('.buttons').addEventListener(\"click\", buttonClick);\r\n}\r\n","import game, { handleUserAction } from './gameState';\r\nimport { TICK_RATE } from './constants';\r\nimport initButtons from './buttons';\r\n\r\nasync function init() {\r\n  initButtons(handleUserAction)\r\n\r\n  let nextTimeToTick = Date.now();\r\n\r\n  function nextAnimationFrame() {\r\n    const now = Date.now();\r\n\r\n    if (nextTimeToTick <= now) {\r\n      game.tick();\r\n      nextTimeToTick = now + TICK_RATE;\r\n    };\r\n\r\n    requestAnimationFrame(nextAnimationFrame);\r\n  }\r\n\r\n  requestAnimationFrame(nextAnimationFrame);\r\n};\r\n\r\n\r\ninit();\r\n"]}